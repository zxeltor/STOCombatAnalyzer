<Window x:Class="zxeltor.StoCombat.Realtime.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:zxeltor.StoCombat.Realtime.Controls"
        xmlns:properties="clr-namespace:zxeltor.StoCombat.Realtime.Properties"
        xmlns:classes="clr-namespace:zxeltor.StoCombat.Realtime.Classes"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type classes:RealtimeCombatLogMonitor}}"
        Title="MainWindow" Height="300" Width="440">
    <Window.Resources>
        <ResourceDictionary Source="Styles/StoCombatResourceDictionary.xaml"></ResourceDictionary>
    </Window.Resources>
    <Grid>
        <TabControl>
            <TabItem Header="Monitor">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Vertical" Margin="4,4,4,4" Grid.Row="0" HorizontalAlignment="Left">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6">
                                <TextBlock Text="Running:" Margin="0,0,4,0" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                <TextBlock Text="{Binding Path=IsRunning}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                            </StackPanel>
                            
                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6">
                                <TextBlock Text="File:" Margin="0,0,4,0" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                <TextBlock Text="{Binding Path=LatestFileName}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6">
                                <TextBlock Text="File Last Updated:" Margin="0,0,4,0" Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                                <TextBlock Text="{Binding Path=LatestFileUpdated, Converter={StaticResource dateTimeToExtendedDateStringConverter}}" 
                                           TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="4,4,4,4" Grid.Row="0" HorizontalAlignment="Right">
                        <Button Name="uiButtonOpenLog" HorizontalAlignment="Left" Margin="16,0,0,0" Padding="2,2,2,2" VerticalAlignment="Top" 
                                Height="18" ToolTip="Open the Logging tab"
                                Click="UiButtonOpenLog_OnClick">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Setters>
                                        <Setter Property="Background" Value="Transparent"></Setter>
                                        <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HasHalted}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=HasHalted}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Image Name="uiImageAlert" Source="Images/glyphicons-505-alert.png"></Image>
                        </Button>

                        <Button Name="uiButtonStart" HorizontalAlignment="Left" Margin="16,0,0,0" Padding="2,2,2,2" VerticalAlignment="Top" 
                                Height="18" ToolTip="Start the real-time parser" Click="UiButtonStart_OnClick">
                            <Image Source="Images/glyphicons-174-play.png"></Image>
                        </Button>

                        <Button Name="uiButtonEnd" HorizontalAlignment="Left" Margin="8,0,0,0" Padding="2,2,2,2" VerticalAlignment="Top" 
                                Height="18" ToolTip="Stop the real-time parser" Click="UiButtonEnd_OnClick">
                            <Image Source="Images/glyphicons-176-stop.png"></Image>
                        </Button>
                    </StackPanel>
                    <DataGrid Grid.Row="1" Margin="10,10,10,10" ItemsSource="{Binding Path=CurrentCombat.PlayerEntitiesOrderByName}" CanUserAddRows="False" IsReadOnly="True" CanUserDeleteRows="False"
              CanUserResizeRows="False" CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserSortColumns="True" AutoGenerateColumns="False">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsInCombat}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource colorEventTypeMetricValue}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsInCombat}" Value="False">
                                        <Setter Property="Foreground" Value="{StaticResource colorRejectedReason}"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name"
                                Binding="{Binding Path=OwnerDisplay}"
                                IsReadOnly="True" SortDirection="Ascending" />
                            <DataGridTextColumn Header="Damage"
                                                Binding="{Binding Path=EntityTotalMagnitude, Converter={StaticResource doubleToThousandsStringConverter}}"
                                                IsReadOnly="True" />
                            <DataGridTextColumn Header="DPS"
                                                Binding="{Binding Path=EntityMagnitudePerSecond, Converter={StaticResource doubleToThousandsStringConverter}}"
                                                IsReadOnly="True" />
                            <DataGridTextColumn Header="Kills"
                                                Binding="{Binding Path=EntityCombatKills}"
                                                IsReadOnly="True" />
                            <DataGridTextColumn Header="Attacks"
                                                Binding="{Binding Path=EntityCombatAttacks}"
                                                IsReadOnly="True" />
                            <DataGridTextColumn Header="Last Active"
                                                Binding="{Binding Path=EntityCombatEnd, Converter={StaticResource dateTimeToHoursMinutesSecondsMilliSecondsConverter}}"
                                                IsReadOnly="True" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Logging" Name="uiTabItemLogging">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <WrapPanel Orientation="Horizontal" Grid.Row="0" Margin="4,4,4,4">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Lines last read: " Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                            <TextBlock Text="{Binding Path=LinesLastReadCount}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="8,0,0,0">
                            <TextBlock Text="Events last added: " Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                            <TextBlock Text="{Binding Path=EventsLastAddCount}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="8,0,0,0">
                            <TextBlock Text="Parsing Errors: " Foreground="{StaticResource colorEventTypeMetricLabel}"></TextBlock>
                            <TextBlock Text="{Binding Path=ErrorsCountSinceNewCombat}" TextWrapping="Wrap" Foreground="{StaticResource colorEventTypeMetricValue}"></TextBlock>
                        </StackPanel>
                    </WrapPanel>
                    <controls:LogControl Grid.Row="1"></controls:LogControl>
                </Grid>
            </TabItem>
            <TabItem Header="Settings" DataContext="{Binding Source={x:Static properties:Settings.Default}}">
                <controls:SettingsControl></controls:SettingsControl>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
