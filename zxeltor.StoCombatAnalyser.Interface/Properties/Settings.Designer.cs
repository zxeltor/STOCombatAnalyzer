//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace zxeltor.StoCombatAnalyzer.Interface.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.9.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("c:\\temp")]
        public string CombatLogPath {
            get {
                return ((string)(this["CombatLogPath"]));
            }
            set {
                this["CombatLogPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("combatlog*.log")]
        public string CombatLogPathFilePattern {
            get {
                return ((string)(this["CombatLogPathFilePattern"]));
            }
            set {
                this["CombatLogPathFilePattern"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int MaxNumberOfCombatsToDisplay {
            get {
                return ((int)(this["MaxNumberOfCombatsToDisplay"]));
            }
            set {
                this["MaxNumberOfCombatsToDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int HowLongBeforeNewCombat {
            get {
                return ((int)(this["HowLongBeforeNewCombat"]));
            }
            set {
                this["HowLongBeforeNewCombat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool PurgeCombatLogs {
            get {
                return ((bool)(this["PurgeCombatLogs"]));
            }
            set {
                this["PurgeCombatLogs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("7")]
        public long HowLongToKeepLogs {
            get {
                return ((long)(this["HowLongToKeepLogs"]));
            }
            set {
                this["HowLongToKeepLogs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DebugLogging {
            get {
                return ((bool)(this["DebugLogging"]));
            }
            set {
                this["DebugLogging"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string MyCharacter {
            get {
                return ((string)(this["MyCharacter"]));
            }
            set {
                this["MyCharacter"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{\r\n  \"Comments\": [\r\n    \"CombatMapEntityList: The main list of map definitions. T" +
            "his collection is used first when trying to detect a map for a Combat entity\",\r\n" +
            "    \"EntityExclusionList: This is used to filter out game entity ids from the ma" +
            "p detect process.\",\r\n    \"GenericGroundMap: When a map isn\'t detected when check" +
            "ing CombatMapEntityList, we use this to determine if the Combat entity is on a g" +
            "round based map.\",\r\n    \"GenericSpaceMap: When a map isn\'t detected when checkin" +
            "g CombatMapEntityList, we use this to determine if the Combat entity is on a spa" +
            "ce based map.\",\r\n    \"CombatMapEntityList: The main list of map definitions. Thi" +
            "s collection is used first when trying to detect a map for a Combat entity\",\r\n  " +
            "  \"EntityExclusionList: This is used to filter out game entity ids from the map " +
            "detect process.\",\r\n    \"GenericGroundMap: When a map isn\'t detected when checkin" +
            "g CombatMapEntityList, we use this to determine if the Combat entity is on a gro" +
            "und based map.\",\r\n    \"GenericSpaceMap: When a map isn\'t detected when checking " +
            "CombatMapEntityList, we use this to determine if the Combat entity is on a space" +
            " based map.\",\r\n    \"EntityExclusionList is used to filter out targets from a map" +
            " which aren\'t an entity, like a pet or something else we don\'t want to use in ma" +
            "p detection.\",\r\n    \"CombatMapEntityList: The main list of map definitions. This" +
            " collection is used first when trying to detect a map for a Combat entity\",\r\n   " +
            " \"EntityExclusionList: This is used to filter out game entity ids from the map d" +
            "etect process.\",\r\n    \"GenericGroundMap: When a map isn\'t detected when checking" +
            " CombatMapEntityList, we use this to determine if the Combat entity is on a grou" +
            "nd based map.\",\r\n    \"GenericSpaceMap: When a map isn\'t detected when checking C" +
            "ombatMapEntityList, we use this to determine if the Combat entity is on a space " +
            "based map.\"\r\n  ],\r\n  \"JsonVersion\": \"1.0.1.0\",\r\n  \"GenericGroundMap\": {\r\n    \"Na" +
            "me\": \"Generic Ground\",\r\n    \"MapEntities\": [\r\n      {\r\n        \"Pattern\": \"Groun" +
            "d_\"\r\n      }\r\n    ],\r\n    \"MapEntityExclusions\": []\r\n  },\r\n  \"GenericSpaceMap\": " +
            "{\r\n    \"Name\": \"Generic Space\",\r\n    \"MapEntities\": [\r\n      {\r\n        \"Pattern" +
            "\": \"Space_\"\r\n      }\r\n    ],\r\n    \"MapEntityExclusions\": []\r\n  },\r\n  \"EntityExcl" +
            "usionList\": [\r\n    {\r\n      \"Pattern\": \"Space_Nimbus_Pirate_Distress\"\r\n    }\r\n  " +
            "],\r\n  \"CombatMapEntityList\": [\r\n    {\r\n      \"Name\": \"Infected Space\",\r\n      \"M" +
            "apEntities\": [\r\n        {\r\n          \"Pattern\": \"Space_Borg_Dreadnought_Raidisod" +
            "e_Sibrian_Final_Boss\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n   " +
            " },\r\n    {\r\n      \"Name\": \"Azure Nebula Rescue\",\r\n      \"MapEntities\": [\r\n      " +
            "  {\r\n          \"Pattern\": \"Mission_Space_Romulan_Colony_Flagship_Lleiset\"\r\n     " +
            "   }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"B" +
            "attle At The Binary Stars\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Patte" +
            "rn\": \"Space_Klingon_Dreadnought_Dsc_Sarcophagus\"\r\n        }\r\n      ],\r\n      \"Ma" +
            "pEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Battle At Procyon V\",\r\n   " +
            "   \"MapEntities\": [\r\n        {\r\n          \"Pattern\": \"Event_Procyon_5_Queue_Kren" +
            "im_Dreadnaught_Annorax\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n " +
            "   },\r\n    {\r\n      \"Name\": \"Borg Disconnected\",\r\n      \"MapEntities\": [\r\n      " +
            "  {\r\n          \"Pattern\": \"Mission_Space_Borg_Queen_Diamond_Brg_Queue_Liberation" +
            "\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"N" +
            "ame\": \"Counterpoint\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Pattern\": \"" +
            "Mission_Starbase_Mirror_Ds9_Mu_Queue\"\r\n        }\r\n      ],\r\n      \"MapEntityExcl" +
            "usions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Crystalline Entity\",\r\n      \"MapEntit" +
            "ies\": [\r\n        {\r\n          \"Pattern\": \"Space_Crystalline_Entity_2018\"\r\n      " +
            "  }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Ga" +
            "teway To Grethor\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Pattern\": \"Eve" +
            "nt_Ico_Qonos_Space_Herald_Dreadnaught\"\r\n        }\r\n      ],\r\n      \"MapEntityExc" +
            "lusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Herald Sphere\",\r\n      \"MapEntities\"" +
            ": [\r\n        {\r\n          \"Pattern\": \"Mission_Space_Federation_Science_Herald_Sp" +
            "here\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n    " +
            "  \"Name\": \"Operation Riposte\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Pa" +
            "ttern\": \"Msn_Dsc_Priors_System_Tfo_Orbital_Platform_1_Fed_Dsc\"\r\n        }\r\n     " +
            " ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Cure Found\"," +
            "\r\n      \"MapEntities\": [\r\n        {\r\n          \"Pattern\": \"Space_Borg_Dreadnough" +
            "t_R02\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n   " +
            "   \"Name\": \"Days Of Doom\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Patter" +
            "n\": \"Space_Klingon_Tos_X3_Battlecruiser\"\r\n        }\r\n      ],\r\n      \"MapEntityE" +
            "xclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Dranuur Gauntlet\",\r\n      \"MapEnti" +
            "ties\": [\r\n        {\r\n          \"Pattern\": \"Msn_Luk_Colony_Dranuur_Queue_System_U" +
            "pgradeable_Satellite\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n   " +
            " },\r\n    {\r\n      \"Name\": \"Khitomer Space\",\r\n      \"MapEntities\": [\r\n        {\r\n" +
            "          \"Pattern\": \"Space_Borg_Dreadnought_Raidisode_Khitomer_Intro_Boss\"\r\n   " +
            "     }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": " +
            "\"Storming The Spire\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Pattern\": \"" +
            "Mission_Spire_Space_Voth_Frigate\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusio" +
            "ns\": []\r\n    },\r\n    {\r\n      \"Name\": \"Swarm\",\r\n      \"MapEntities\": [\r\n        " +
            "{\r\n          \"Pattern\": \"Space_Drantzuli_Alpha_Battleship\"\r\n        }\r\n      ],\r" +
            "\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"To Hell With Hon" +
            "or\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Pattern\": \"Mission_Beta_Lank" +
            "al_Destructible_Reactor\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n" +
            "    },\r\n    {\r\n      \"Name\": \"Gravity Kills\",\r\n      \"MapEntities\": [\r\n        {" +
            "\r\n          \"Pattern\": \"Space_Federation_Dreadnought_Jupiter_Class_Carrier\"\r\n   " +
            "     },\r\n        {\r\n          \"Pattern\": \"Msn_Luk_Hypermass_Queue_System_Tzk_Pro" +
            "tomatter_Facility\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    }," +
            "\r\n    {\r\n      \"Name\": \"Hive Space\",\r\n      \"MapEntities\": [\r\n        {\r\n       " +
            "   \"Pattern\": \"Space_Borg_Dreadnought_Hive_Intro\"\r\n        }\r\n      ],\r\n      \"M" +
            "apEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Operation Wolf\",\r\n      \"" +
            "MapEntities\": [\r\n        {\r\n          \"Pattern\": \"Ground_Federation_Capt_Mirror_" +
            "Runabout_Tfo\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n   " +
            " {\r\n      \"Name\": \"Bug Hunt\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Pat" +
            "tern\": \"Bluegills_Ground_Boss\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\"" +
            ": []\r\n    },\r\n    {\r\n      \"Name\": \"Miner Instabilities\",\r\n      \"MapEntities\": " +
            "[\r\n        {\r\n          \"Pattern\": \"Msn_Edren_Queue_Ground_Gorn_Lt_Tos_Range_Roc" +
            "k\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"" +
            "Name\": \"Jupiter Station Showdown\",\r\n      \"MapEntities\": [\r\n        {\r\n         " +
            " \"Pattern\": \"Msn_Ground_Capt_Mirror_Janeway_Boss_Unkillable\"\r\n        }\r\n      ]" +
            ",\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Nukara Prime: " +
            "Transdimensional Tactics\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Patter" +
            "n\": \"Mission_Event_Tholian_Invasion_Ext_Boss\"\r\n        }\r\n      ],\r\n      \"MapEn" +
            "tityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Battle of Wolf 359\",\r\n      \"" +
            "MapEntities\": [\r\n        {\r\n          \"Pattern\": \"Space_Borg_Dreadnought_Wolf359" +
            "\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"N" +
            "ame\": \"Nimbus\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Pattern\": \"Ground" +
            "_Renegades_Lt_Gorn_Nimbus_Sniper\"\r\n        },\r\n        {\r\n          \"Pattern\": \"" +
            "Ground_Gorn\"\r\n        },\r\n        {\r\n          \"Pattern\": \"Beast_Dewan_Arthropod" +
            "\"\r\n        },\r\n        {\r\n          \"Pattern\": \"Nimbus\"\r\n        }\r\n      ],\r\n  " +
            "    \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Nukara\",\r\n      \"Ma" +
            "pEntities\": [\r\n        {\r\n          \"Pattern\": \"Ground_Tholian\"\r\n        }\r\n    " +
            "  ],\r\n      \"MapEntityExclusions\": []\r\n    },\r\n    {\r\n      \"Name\": \"Defend Rh\'I" +
            "hho Station\",\r\n      \"MapEntities\": [\r\n        {\r\n          \"Pattern\": \"Ground_E" +
            "lachi\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusions\": [\r\n        {\r\n        " +
            "  \"Pattern\": \"Ground_Elachi_Ensign_Friendly_Rift\"\r\n        }\r\n      ]\r\n    },\r\n " +
            "   {\r\n      \"Name\": \"Borg Battle Royale\",\r\n      \"MapEntities\": [\r\n        {\r\n  " +
            "        \"Pattern\": \"Range_Mirror\"\r\n        }\r\n      ],\r\n      \"MapEntityExclusio" +
            "ns\": []\r\n    }\r\n  ]\r\n}")]
        public string DefaultCombatMapList {
            get {
                return ((string)(this["DefaultCombatMapList"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string UserCombatMapList {
            get {
                return ((string)(this["UserCombatMapList"]));
            }
            set {
                this["UserCombatMapList"] = value;
            }
        }
    }
}
