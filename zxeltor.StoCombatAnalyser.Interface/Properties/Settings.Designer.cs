//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace zxeltor.StoCombatAnalyzer.Interface.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.9.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string CombatLogPath {
            get {
                return ((string)(this["CombatLogPath"]));
            }
            set {
                this["CombatLogPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("combatlog*.log")]
        public string CombatLogPathFilePattern {
            get {
                return ((string)(this["CombatLogPathFilePattern"]));
            }
            set {
                this["CombatLogPathFilePattern"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int MaxNumberOfCombatsToDisplay {
            get {
                return ((int)(this["MaxNumberOfCombatsToDisplay"]));
            }
            set {
                this["MaxNumberOfCombatsToDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20")]
        public int HowLongBeforeNewCombat {
            get {
                return ((int)(this["HowLongBeforeNewCombat"]));
            }
            set {
                this["HowLongBeforeNewCombat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool PurgeCombatLogs {
            get {
                return ((bool)(this["PurgeCombatLogs"]));
            }
            set {
                this["PurgeCombatLogs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("7")]
        public long HowLongToKeepLogs {
            get {
                return ((long)(this["HowLongToKeepLogs"]));
            }
            set {
                this["HowLongToKeepLogs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DebugLogging {
            get {
                return ((bool)(this["DebugLogging"]));
            }
            set {
                this["DebugLogging"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string MyCharacter {
            get {
                return ((string)(this["MyCharacter"]));
            }
            set {
                this["MyCharacter"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{\"JsonVersion\":\"1.3.4\",\"JsonVersionDescription\":\"\",\"Comments\":[\"JsonVersion: Uses" +
            " Semantic Versioning 2.0.0 (Major,Minor,Patch)\",\"GenericGroundMap: When a map is" +
            "n\'t detected when checking CombatMapEntityList, we use this to determine if the " +
            "Combat entity is on a ground based map.\",\"GenericSpaceMap: When a map isn\'t dete" +
            "cted when checking CombatMapEntityList, we use this to determine if the Combat e" +
            "ntity is on a space based map.\",\"EntityExclusionList: This is used to filter out" +
            " game entity ids from the map detect process.\",\"CombatMapEntityList: The main li" +
            "st of map definitions. This collection is used first when trying to detect a map" +
            " for a Combat entity.\"],\"EntityExclusionList\":[{\"Pattern\":\"Space_Nimbus_Pirate_D" +
            "istress\",\"IsUniqueToMap\":false}],\"CombatMapEntityList\":[{\"Name\":\"Infected Space\"" +
            ",\"MapEntities\":[{\"Pattern\":\"Space_Borg_Dreadnought_Raidisode_Sibrian_Final_Boss\"" +
            ",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Azure Nebula Rescue\"," +
            "\"MapEntities\":[{\"Pattern\":\"Mission_Space_Romulan_Colony_Flagship_Lleiset\",\"IsUni" +
            "queToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Battle At The Binary Stars\"," +
            "\"MapEntities\":[{\"Pattern\":\"Space_Klingon_Dreadnought_Dsc_Sarcophagus\",\"IsUniqueT" +
            "oMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Battle At Procyon V\",\"MapEntitie" +
            "s\":[{\"Pattern\":\"Event_Procyon_5_Queue_Krenim_Dreadnaught_Annorax\",\"IsUniqueToMap" +
            "\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Borg Disconnected\",\"MapEntities\":[{\"" +
            "Pattern\":\"Mission_Space_Borg_Queen_Diamond_Brg_Queue_Liberation\",\"IsUniqueToMap\"" +
            ":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Counterpoint\",\"MapEntities\":[{\"Patter" +
            "n\":\"Mission_Starbase_Mirror_Ds9_Mu_Queue\",\"IsUniqueToMap\":true}],\"MapEntityExclu" +
            "sions\":[]},{\"Name\":\"Crystalline Entity\",\"MapEntities\":[{\"Pattern\":\"Space_Crystal" +
            "line_Entity_2018\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Gate" +
            "way To Grethor\",\"MapEntities\":[{\"Pattern\":\"Event_Ico_Qonos_Space_Herald_Dreadnau" +
            "ght\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Herald Sphere\",\"M" +
            "apEntities\":[{\"Pattern\":\"Mission_Space_Federation_Science_Herald_Sphere\",\"IsUniq" +
            "ueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Operation Riposte\",\"MapEntiti" +
            "es\":[{\"Pattern\":\"Msn_Dsc_Priors_System_Tfo_Orbital_Platform_1_Fed_Dsc\",\"IsUnique" +
            "ToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Cure Found\",\"MapEntities\":[{\"Pa" +
            "ttern\":\"Space_Borg_Dreadnought_R02\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\"" +
            ":[]},{\"Name\":\"Days Of Doom\",\"MapEntities\":[{\"Pattern\":\"Space_Klingon_Tos_X3_Batt" +
            "lecruiser\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Dranuur Gau" +
            "ntlet\",\"MapEntities\":[{\"Pattern\":\"Msn_Luk_Colony_Dranuur_Queue_System_Upgradeabl" +
            "e_Satellite\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Khitomer " +
            "Space\",\"MapEntities\":[{\"Pattern\":\"Space_Borg_Dreadnought_Raidisode_Khitomer_Intr" +
            "o_Boss\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Storming The S" +
            "pire\",\"MapEntities\":[{\"Pattern\":\"Mission_Spire_Space_Voth_Frigate\",\"IsUniqueToMa" +
            "p\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Swarm\",\"MapEntities\":[{\"Pattern\":\"S" +
            "pace_Drantzuli_Alpha_Battleship\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]" +
            "},{\"Name\":\"To Hell With Honor\",\"MapEntities\":[{\"Pattern\":\"Mission_Beta_Lankal_De" +
            "structible_Reactor\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Gr" +
            "avity Kills\",\"MapEntities\":[{\"Pattern\":\"Space_Federation_Dreadnought_Jupiter_Cla" +
            "ss_Carrier\",\"IsUniqueToMap\":true},{\"Pattern\":\"Msn_Luk_Hypermass_Queue_System_Tzk" +
            "_Protomatter_Facility\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":" +
            "\"Hive Space\",\"MapEntities\":[{\"Pattern\":\"Space_Borg_Dreadnought_Hive_Intro\",\"IsUn" +
            "iqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Operation Wolf\",\"MapEntitie" +
            "s\":[{\"Pattern\":\"Ground_Federation_Capt_Mirror_Runabout_Tfo\",\"IsUniqueToMap\":true" +
            "}],\"MapEntityExclusions\":[]},{\"Name\":\"Bug Hunt\",\"MapEntities\":[{\"Pattern\":\"Blueg" +
            "ills_Ground_Boss\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Mine" +
            "r Instabilities\",\"MapEntities\":[{\"Pattern\":\"Msn_Edren_Queue_Ground_Gorn_Lt_Tos_R" +
            "ange_Rock\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Jupiter Sta" +
            "tion Showdown\",\"MapEntities\":[{\"Pattern\":\"Msn_Ground_Capt_Mirror_Janeway_Boss_Un" +
            "killable\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Nukara Prime" +
            ": Transdimensional Tactics\",\"MapEntities\":[{\"Pattern\":\"Mission_Event_Tholian_Inv" +
            "asion_Ext_Boss\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Battle" +
            " of Wolf 359\",\"MapEntities\":[{\"Pattern\":\"Space_Borg_Dreadnought_Wolf359\",\"IsUniq" +
            "ueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Nimbus\",\"MapEntities\":[{\"Patt" +
            "ern\":\"Ground_Renegades_Lt_Gorn_Nimbus_Sniper\",\"IsUniqueToMap\":true},{\"Pattern\":\"" +
            "Ground_Gorn\",\"IsUniqueToMap\":false},{\"Pattern\":\"Beast_Dewan_Arthropod\",\"IsUnique" +
            "ToMap\":false}],\"MapEntityExclusions\":[]},{\"Name\":\"Nukara\",\"MapEntities\":[{\"Patte" +
            "rn\":\"Ground_Tholian\",\"IsUniqueToMap\":false}],\"MapEntityExclusions\":[]},{\"Name\":\"" +
            "Defend Rh\'Ihho Station\",\"MapEntities\":[{\"Pattern\":\"Ground_Elachi\",\"IsUniqueToMap" +
            "\":false}],\"MapEntityExclusions\":[{\"Pattern\":\"Ground_Elachi_Ensign_Friendly_Rift\"" +
            ",\"IsUniqueToMap\":false}]},{\"Name\":\"Borg Battle Royale\",\"MapEntities\":[{\"Pattern\"" +
            ":\"Range_Mirror\",\"IsUniqueToMap\":false}],\"MapEntityExclusions\":[]}],\"GenericGroun" +
            "dMap\":{\"Name\":\"Generic Ground\",\"MapEntities\":[{\"Pattern\":\"Ground_\",\"IsUniqueToMa" +
            "p\":false}],\"MapEntityExclusions\":[]},\"GenericSpaceMap\":{\"Name\":\"Generic Space\",\"" +
            "MapEntities\":[{\"Pattern\":\"Space_\",\"IsUniqueToMap\":false}],\"MapEntityExclusions\":" +
            "[]}}")]
        public string DefaultCombatMapList {
            get {
                return ((string)(this["DefaultCombatMapList"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string UserCombatMapList {
            get {
                return ((string)(this["UserCombatMapList"]));
            }
            set {
                this["UserCombatMapList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("48")]
        public int HowFarBackForCombat {
            get {
                return ((int)(this["HowFarBackForCombat"]));
            }
            set {
                this["HowFarBackForCombat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsDetectionsSettingsVisibleInUi {
            get {
                return ((bool)(this["IsDetectionsSettingsVisibleInUi"]));
            }
            set {
                this["IsDetectionsSettingsVisibleInUi"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsCombinePets {
            get {
                return ((bool)(this["IsCombinePets"]));
            }
            set {
                this["IsCombinePets"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsd=\"http://www.w3." +
            "org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n  <s" +
            "tring>hitpoints</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection EventTypeRemovalFilterForDps {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["EventTypeRemovalFilterForDps"]));
            }
            set {
                this["EventTypeRemovalFilterForDps"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsIncludeNonPlayerEntities {
            get {
                return ((bool)(this["IsIncludeNonPlayerEntities"]));
            }
            set {
                this["IsIncludeNonPlayerEntities"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsDisplayParseResults {
            get {
                return ((bool)(this["IsDisplayParseResults"]));
            }
            set {
                this["IsDisplayParseResults"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsSelectLatestCombatOnParseLogs {
            get {
                return ((bool)(this["IsSelectLatestCombatOnParseLogs"]));
            }
            set {
                this["IsSelectLatestCombatOnParseLogs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsEnableAnalysisTools {
            get {
                return ((bool)(this["IsEnableAnalysisTools"]));
            }
            set {
                this["IsEnableAnalysisTools"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("4")]
        public double MinInActiveInSeconds {
            get {
                return ((double)(this["MinInActiveInSeconds"]));
            }
            set {
                this["MinInActiveInSeconds"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsEnableInactiveTimeCalculations {
            get {
                return ((bool)(this["IsEnableInactiveTimeCalculations"]));
            }
            set {
                this["IsEnableInactiveTimeCalculations"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://raw.githubusercontent.com/zxeltor/STOCombatAnalyzer.Settings/main/CombatM" +
            "apDetectionSettings.json")]
        public string MapDetctionSettingsDownloadUrl {
            get {
                return ((string)(this["MapDetctionSettingsDownloadUrl"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsDisplayPlotPlayerInactive {
            get {
                return ((bool)(this["IsDisplayPlotPlayerInactive"]));
            }
            set {
                this["IsDisplayPlotPlayerInactive"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsDisplayPlotMagnitudeBase {
            get {
                return ((bool)(this["IsDisplayPlotMagnitudeBase"]));
            }
            set {
                this["IsDisplayPlotMagnitudeBase"] = value;
            }
        }
    }
}
