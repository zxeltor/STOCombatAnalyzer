//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace zxeltor.StoCombatAnalyzer.Interface.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.9.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string CombatLogPath {
            get {
                return ((string)(this["CombatLogPath"]));
            }
            set {
                this["CombatLogPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("combatlog*.log")]
        public string CombatLogPathFilePattern {
            get {
                return ((string)(this["CombatLogPathFilePattern"]));
            }
            set {
                this["CombatLogPathFilePattern"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int MaxNumberOfCombatsToDisplay {
            get {
                return ((int)(this["MaxNumberOfCombatsToDisplay"]));
            }
            set {
                this["MaxNumberOfCombatsToDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20")]
        public int HowLongBeforeNewCombat {
            get {
                return ((int)(this["HowLongBeforeNewCombat"]));
            }
            set {
                this["HowLongBeforeNewCombat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool PurgeCombatLogs {
            get {
                return ((bool)(this["PurgeCombatLogs"]));
            }
            set {
                this["PurgeCombatLogs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("7")]
        public long HowLongToKeepLogs {
            get {
                return ((long)(this["HowLongToKeepLogs"]));
            }
            set {
                this["HowLongToKeepLogs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DebugLogging {
            get {
                return ((bool)(this["DebugLogging"]));
            }
            set {
                this["DebugLogging"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string MyCharacter {
            get {
                return ((string)(this["MyCharacter"]));
            }
            set {
                this["MyCharacter"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("{\"JsonVersion\":\"1.3.5\",\"JsonVersionDescription\":\"\",\"Comments\":[\"JsonVersion: Uses" +
            " Semantic Versioning 2.0.0 (Major,Minor,Patch)\",\"GenericGroundMap: When a map is" +
            "n\'t detected when checking CombatMapEntityList, we use this to determine if the " +
            "Combat entity is on a ground based map.\",\"GenericSpaceMap: When a map isn\'t dete" +
            "cted when checking CombatMapEntityList, we use this to determine if the Combat e" +
            "ntity is on a space based map.\",\"EntityExclusionList: This is used to filter out" +
            " game entity ids from the map detect process.\",\"CombatMapEntityList: The main li" +
            "st of map definitions. This collection is used first when trying to detect a map" +
            " for a Combat entity.\"],\"EntityExclusionList\":[{\"IsEnabled\":true,\"Pattern\":\"Spac" +
            "e_Nimbus_Pirate_Distress\",\"IsUniqueToMap\":false},{\"IsEnabled\":true,\"Pattern\":\"Vo" +
            "th Power Subcore\",\"IsUniqueToMap\":false}],\"CombatMapEntityList\":[{\"Name\":\"Event:" +
            " Infected Space\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Sp" +
            "ace_Borg_Dreadnought_Raidisode_Sibrian_Final_Boss\",\"IsUniqueToMap\":true}],\"MapEn" +
            "tityExclusions\":[]},{\"Name\":\"Event: Azure Nebula Rescue\",\"IsEnabled\":true,\"MapEn" +
            "tities\":[{\"IsEnabled\":true,\"Pattern\":\"Mission_Space_Romulan_Colony_Flagship_Llei" +
            "set\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Battle At " +
            "The Binary Stars\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"S" +
            "pace_Klingon_Dreadnought_Dsc_Sarcophagus\",\"IsUniqueToMap\":true}],\"MapEntityExclu" +
            "sions\":[]},{\"Name\":\"Event: Battle At Procyon V\",\"IsEnabled\":true,\"MapEntities\":[" +
            "{\"IsEnabled\":true,\"Pattern\":\"Event_Procyon_5_Queue_Krenim_Dreadnaught_Annorax\",\"" +
            "IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Borg Disconnecte" +
            "d\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Mission_Space_Bo" +
            "rg_Queen_Diamond_Brg_Queue_Liberation\",\"IsUniqueToMap\":true}],\"MapEntityExclusio" +
            "ns\":[]},{\"Name\":\"Event: Counterpoint\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnable" +
            "d\":true,\"Pattern\":\"Mission_Starbase_Mirror_Ds9_Mu_Queue\",\"IsUniqueToMap\":true}]," +
            "\"MapEntityExclusions\":[]},{\"Name\":\"Event: Crystalline Entity\",\"IsEnabled\":true,\"" +
            "MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Space_Crystalline_Entity_2018\",\"IsUni" +
            "queToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Gateway To Grethor\",\"" +
            "IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Event_Ico_Qonos_Spac" +
            "e_Herald_Dreadnaught\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"" +
            "Event: Herald Sphere\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern" +
            "\":\"Mission_Space_Federation_Science_Herald_Sphere\",\"IsUniqueToMap\":true}],\"MapEn" +
            "tityExclusions\":[]},{\"Name\":\"Event: Operation Riposte\",\"IsEnabled\":true,\"MapEnti" +
            "ties\":[{\"IsEnabled\":true,\"Pattern\":\"Msn_Dsc_Priors_System_Tfo_Orbital_Platform_1" +
            "_Fed_Dsc\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Cure " +
            "Found\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Space_Borg_D" +
            "readnought_R02\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event:" +
            " Days Of Doom\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Spac" +
            "e_Klingon_Tos_X3_Battlecruiser\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]}" +
            ",{\"Name\":\"Event: Dranuur Gauntlet\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":" +
            "true,\"Pattern\":\"Msn_Luk_Colony_Dranuur_Queue_System_Upgradeable_Satellite\",\"IsUn" +
            "iqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Khitomer Space\",\"IsE" +
            "nabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Space_Borg_Dreadnought_" +
            "Raidisode_Khitomer_Intro_Boss\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]}," +
            "{\"Name\":\"Event: Storming The Spire\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\"" +
            ":true,\"Pattern\":\"Mission_Spire_Space_Voth_Frigate\",\"IsUniqueToMap\":true}],\"MapEn" +
            "tityExclusions\":[]},{\"Name\":\"Event: Swarm\",\"IsEnabled\":true,\"MapEntities\":[{\"IsE" +
            "nabled\":true,\"Pattern\":\"Space_Drantzuli_Alpha_Battleship\",\"IsUniqueToMap\":true}]" +
            ",\"MapEntityExclusions\":[]},{\"Name\":\"Event: To Hell With Honor\",\"IsEnabled\":true," +
            "\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Mission_Beta_Lankal_Destructible_Rea" +
            "ctor\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Gravity K" +
            "ills\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Space_Federat" +
            "ion_Dreadnought_Jupiter_Class_Carrier\",\"IsUniqueToMap\":true},{\"IsEnabled\":true,\"" +
            "Pattern\":\"Msn_Luk_Hypermass_Queue_System_Tzk_Protomatter_Facility\",\"IsUniqueToMa" +
            "p\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Hive Space\",\"IsEnabled\":true" +
            ",\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Space_Borg_Dreadnought_Hive_Intro\"," +
            "\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Operation Wolf\"" +
            ",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Ground_Federation_" +
            "Capt_Mirror_Runabout_Tfo\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Nam" +
            "e\":\"Event: Bug Hunt\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\"" +
            ":\"Bluegills_Ground_Boss\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name" +
            "\":\"Event: Miner Instabilities\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true" +
            ",\"Pattern\":\"Msn_Edren_Queue_Ground_Gorn_Lt_Tos_Range_Rock\",\"IsUniqueToMap\":true}" +
            "],\"MapEntityExclusions\":[]},{\"Name\":\"Jupiter Station Showdown\",\"IsEnabled\":true," +
            "\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Msn_Ground_Capt_Mirror_Janeway_Boss_" +
            "Unkillable\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Nuk" +
            "ara Prime: Transdimensional Tactics\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled" +
            "\":true,\"Pattern\":\"Mission_Event_Tholian_Invasion_Ext_Boss\",\"IsUniqueToMap\":true}" +
            "],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Battle of Wolf 359\",\"IsEnabled\":true" +
            ",\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Space_Borg_Dreadnought_Wolf359\",\"Is" +
            "UniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Map: Nimbus\",\"IsEnabled\":" +
            "true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Ground_Renegades_Lt_Gorn_Nimbus" +
            "_Sniper\",\"IsUniqueToMap\":true},{\"IsEnabled\":true,\"Pattern\":\"Ground_Gorn\",\"IsUniq" +
            "ueToMap\":false},{\"IsEnabled\":true,\"Pattern\":\"Beast_Dewan_Arthropod\",\"IsUniqueToM" +
            "ap\":false}],\"MapEntityExclusions\":[]},{\"Name\":\"Map: Nukara Prime\",\"IsEnabled\":tr" +
            "ue,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Ground_Tholian\",\"IsUniqueToMap\":f" +
            "alse},{\"IsEnabled\":true,\"Pattern\":\"Mission_Tholian_Invasion_Trapped_Friend_Starf" +
            "leet\",\"IsUniqueToMap\":false},{\"IsEnabled\":true,\"Pattern\":\"Ground_Tholian_Ensign\"" +
            ",\"IsUniqueToMap\":false}],\"MapEntityExclusions\":[]},{\"Name\":\"Event: Defend Rh\'Ihh" +
            "o Station\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Ground_E" +
            "lachi\",\"IsUniqueToMap\":false}],\"MapEntityExclusions\":[{\"IsEnabled\":true,\"Pattern" +
            "\":\"Ground_Elachi_Ensign_Friendly_Rift\",\"IsUniqueToMap\":false}]},{\"Name\":\"Event: " +
            "Borg Battle Royale\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":" +
            "\"Range_Mirror\",\"IsUniqueToMap\":false}],\"MapEntityExclusions\":[]},{\"Name\":\"Red Al" +
            "ert: Borg\",\"IsEnabled\":false,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"of Ten " +
            "Unimatrix 0047\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Red Al" +
            "ert: Tholian\",\"IsEnabled\":false,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Spac" +
            "e_Tholian_Dreadnought_Red_Alert\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]" +
            "},{\"Name\":\"Red Alert: Na\'kuhl\",\"IsEnabled\":false,\"MapEntities\":[{\"IsEnabled\":tru" +
            "e,\"Pattern\":\"Space_Nakuhl_Constrictor_Node_Dreadnaught\",\"IsUniqueToMap\":true}],\"" +
            "MapEntityExclusions\":[]},{\"Name\":\"Red Alert: Elachi\",\"IsEnabled\":false,\"MapEntit" +
            "ies\":[{\"IsEnabled\":true,\"Pattern\":\"Elachi_Battleship_Player_Pet_Control\",\"IsUniq" +
            "ueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Red Alert: Tzenkethi\",\"IsEnab" +
            "led\":false,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"C.S.S. Tzen-Torun\",\"IsUni" +
            "queToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Map: Gon\'cra System: Tzenket" +
            "hi Battlezone\",\"IsEnabled\":false,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Kan" +
            "\'Keli\",\"IsUniqueToMap\":true}],\"MapEntityExclusions\":[]},{\"Name\":\"Map: Voth Battl" +
            "ezone\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Pattern\":\"Space_Voth_D" +
            "readnaught\",\"IsUniqueToMap\":false},{\"IsEnabled\":true,\"Pattern\":\"Starbase_Player_" +
            "Fed_T1\",\"IsUniqueToMap\":false}],\"MapEntityExclusions\":[]}],\"GenericGroundMap\":{\"" +
            "Name\":\"Generic Ground\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Patter" +
            "n\":\"Ground_\",\"IsUniqueToMap\":false}],\"MapEntityExclusions\":[]},\"GenericSpaceMap\"" +
            ":{\"Name\":\"Generic Space\",\"IsEnabled\":true,\"MapEntities\":[{\"IsEnabled\":true,\"Patt" +
            "ern\":\"Space_\",\"IsUniqueToMap\":false}],\"MapEntityExclusions\":[]}}")]
        public string DefaultCombatMapList {
            get {
                return ((string)(this["DefaultCombatMapList"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string UserCombatMapList {
            get {
                return ((string)(this["UserCombatMapList"]));
            }
            set {
                this["UserCombatMapList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("48")]
        public int HowFarBackForCombat {
            get {
                return ((int)(this["HowFarBackForCombat"]));
            }
            set {
                this["HowFarBackForCombat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsDetectionsSettingsVisibleInUi {
            get {
                return ((bool)(this["IsDetectionsSettingsVisibleInUi"]));
            }
            set {
                this["IsDetectionsSettingsVisibleInUi"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsCombinePets {
            get {
                return ((bool)(this["IsCombinePets"]));
            }
            set {
                this["IsCombinePets"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsd=\"http://www.w3." +
            "org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n  <s" +
            "tring>hitpoints</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection EventTypeRemovalFilterForDps {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["EventTypeRemovalFilterForDps"]));
            }
            set {
                this["EventTypeRemovalFilterForDps"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsIncludeNonPlayerEntities {
            get {
                return ((bool)(this["IsIncludeNonPlayerEntities"]));
            }
            set {
                this["IsIncludeNonPlayerEntities"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsDisplayParseResults {
            get {
                return ((bool)(this["IsDisplayParseResults"]));
            }
            set {
                this["IsDisplayParseResults"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsSelectLatestCombatOnParseLogs {
            get {
                return ((bool)(this["IsSelectLatestCombatOnParseLogs"]));
            }
            set {
                this["IsSelectLatestCombatOnParseLogs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsEnableAnalysisTools {
            get {
                return ((bool)(this["IsEnableAnalysisTools"]));
            }
            set {
                this["IsEnableAnalysisTools"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("4")]
        public double MinInActiveInSeconds {
            get {
                return ((double)(this["MinInActiveInSeconds"]));
            }
            set {
                this["MinInActiveInSeconds"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsEnableInactiveTimeCalculations {
            get {
                return ((bool)(this["IsEnableInactiveTimeCalculations"]));
            }
            set {
                this["IsEnableInactiveTimeCalculations"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://raw.githubusercontent.com/zxeltor/STOCombatAnalyzer.Settings/main/CombatM" +
            "apDetectionSettings.json")]
        public string MapDetctionSettingsDownloadUrl {
            get {
                return ((string)(this["MapDetctionSettingsDownloadUrl"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsDisplayPlotPlayerInactive {
            get {
                return ((bool)(this["IsDisplayPlotPlayerInactive"]));
            }
            set {
                this["IsDisplayPlotPlayerInactive"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsDisplayPlotMagnitudeBase {
            get {
                return ((bool)(this["IsDisplayPlotMagnitudeBase"]));
            }
            set {
                this["IsDisplayPlotMagnitudeBase"] = value;
            }
        }
    }
}
